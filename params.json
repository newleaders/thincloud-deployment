{"name":"Thincloud Deployment","tagline":"Opinionated framework dependencies, configuration, and recipes for Capistrano-based deployments","body":"# Thincloud::Deployment\r\n\r\nOpinionated framework dependencies, configuration, and recipes for Capistrano-based deployments.\r\n\r\n[New Leaders](https://newleaders.com) uses this gem to manage the following dependencies:\r\n\r\n* [capistrano](https://github.com/capistrano/capistrano)\r\n* [capistrano-fast_remote_cache](https://github.com/newleaders/capistrano-fast_remote_cache)\r\n* [flowdock](https://github.com/flowdock/flowdock-api)\r\n* [grit](https://github.com/mojombo/grit)\r\n* [rvm-capistrano](https://github.com/wayneeseguin/rvm-capistrano)\r\n\r\n## Requirements\r\n\r\nThis gem has been test against the following Ruby versions:\r\n\r\n* 1.9.3\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'thincloud-deployment'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install thincloud-deployment\r\n\r\n## Usage\r\n\r\nThis gem manages the deployment framework dependencies for you, provides a default set of `capistrano` recipes, and provides a `Thor` generator to bootstrap application deployment.\r\n\r\nThis is typically used in `Rails` applications so a rails-like folder structure is assumed when running the generator.\r\n\r\nTo enable the default New Leaders conventions, run the following command:\r\n\r\n```\r\n$ thincloud-capify\r\n```\r\n\r\nIf you are running this from the provided Rails generator, run:\r\n\r\n```\r\n$ rails g thincloud:deployment\r\n```\r\n\r\nThis generator will do the following:\r\n\r\n* Add `Capfile` at the root of your project\r\n* Add `config/deploy.rb` for application-level deployment settings\r\n* Add `config/deploy/staging.rb` and `config/deploy/production.rb` for stage-level deployment settings.\r\n* Add the `lib/recipes` directory to store project specific recipes.\r\n* Set up `foreman`\r\n\r\n### Configuration\r\n\r\nAll conventional settings are contained in the gem recipes and are loaded into the `Capistrano` configuration during startup.\r\n\r\n`thincloud-deployment` follows the `Capistrano` multistage deployment strategy. As you can see in the generator description above, we create an application `deploy.rb` as well as individual stage files (`staging.rb`, `production.rb`).\r\n\r\nAny of the tasks or settings can be overriden in these files.\r\n\r\n#### Adding stages\r\n\r\nJust add a new `Ruby` file under `config/deploy`. To add a `demo` stage you would create `config/deploy/demo.rb`.\r\n\r\n## Contributing\r\n\r\n1. [Fork it](https://github.com/newleaders/thincloud-deployment/fork_select)\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. [Create a Pull Request](https://github.com/newleaders/thincloud-deployment/pull/new)\r\n\r\n\r\n## License\r\n\r\n* Freely distributable and licensed under the [MIT license](http://newleaders.mit-license.org/2013/license.html).\r\n* Copyright (c) 2013 New Leaders ([opensource@newleaders.com](opensource@newleaders.com))\r\n* [https://newleaders.com](https://newleaders.com)\r\n","google":"UA-1755363-18","note":"Don't delete this file! It's used internally to help with page regeneration."}